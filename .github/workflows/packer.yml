name: Packer

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      ANSIBLE_PRIVATE_KEY:
        required: true
      ANSIBLE_PUBLIC_KEY:
        required: true
      ANSIBLE_WEBHOOK_URL:
        required: true

jobs:
  packer:
    name: Packer
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      # install Packer
      - name: Install Packer
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install packer -y
      
      # run Packer checks
      - name: Run Packer Checks
        id: packer-check
        run: |
          packer init packer
          packer fmt packer
          packer validate packer/docker-python.pkr.hcl
      
      - name: Configure Credentials
        id: credentials-create
        run: |
          sed -i 's|AWS_ACCESS_KEY_ID|${{ secrets.AWS_ACCESS_KEY_ID }}|' packer/docker-python.pkr.hcl
          sed -i 's|AWS_SECRET_ACCESS_KEY|${{ secrets.AWS_SECRET_ACCESS_KEY }}|' packer/docker-python.pkr.hcl
          echo "${{ secrets.ANSIBLE_PRIVATE_KEY }}" > ansible/id_rsa
          echo "${{ secrets.ANSIBLE_PUBLIC_KEY }}" > ansible/id_rsa.pub
          sed -i 's|\\n|\n|g' ansible/id_rsa.pub
          sed -i 's|ANSIBLE_WEBHOOK_URL|${{ secrets.ANSIBLE_WEBHOOK_URL }}|' ansible/run.sh

      # run Packer build for PR
      - name: Run Packer Build for PR
        id: packer-build-pr
        if: github.event_name == 'pull_request'
        run: |
          sed -i 's|ANSIBLE_TITLE|Ansible Container Check Output|' ansible/run.sh
          sed -i 's|ANSIBLE_CMD|ansible-playbook playbook.yml --inventory inventory --check|' ansible/run.sh
          packer build packer/docker-python.pkr.hcl
          sed -i 's|Ansible Container Check Output|ANSIBLE_TITLE|' ansible/run.sh
          sed -i 's|ansible-playbook playbook.yml --inventory inventory --check|ANSIBLE_CMD|' ansible/run.sh

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `#### Packer Format and Style ðŸ–Œ\`${{ steps.packer-check.outcome }}\`

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Packer Check Status
        if: steps.packer-check.outcome == 'failure'
        run: exit 1

      # run Packer build for deploy
      - name: Run Packer Build for Deploy
        id: packer-build-deploy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          sed -i 's|ANSIBLE_TITLE|Ansible Container Deploy Output|' ansible/run.sh
          sed -i 's|ANSIBLE_CMD|ansible-playbook playbook.yml --inventory inventory|' ansible/run.sh
          packer build packer/docker-python.pkr.hcl
          sed -i 's|Ansible Container Deploy Output|ANSIBLE_TITLE|' ansible/run.sh
          sed -i 's|ansible-playbook playbook.yml --inventory inventory|ANSIBLE_CMD|' ansible/run.sh
      
      - name: Clear Credentials
        id: credentials-clear
        run: |
          sed -i 's|${{ secrets.AWS_ACCESS_KEY_ID }}|AWS_ACCESS_KEY_ID|' packer/docker-python.pkr.hcl
          sed -i 's|${{ secrets.AWS_SECRET_ACCESS_KEY }}|AWS_SECRET_ACCESS_KEY|' packer/docker-python.pkr.hcl
          echo " " > ansible/id_rsa
          echo " " > ansible/id_rsa.pub
          sed -i 's|${{ secrets.ANSIBLE_WEBHOOK_URL }}|ANSIBLE_WEBHOOK_URL|' ansible/run.sh
          rm -f ~/.docker/config.json

      # # fix backwards incompatibilities in template
      # - name: Fix Template
      #   id: packer-fix
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: fix
      #     target: packer

      # # initialize Packer
      # - name: Initialize Packer
      #   id: packer-init
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: init
      #     target: packer
      
      # # check templates formatting
      # - name: Check Templates Formatting
      #   id: packer-fmt
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: fmt
      #     target: packer
      
      # # validate template
      # - name: Validate Template
      #   id: packer-validate
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: validate
      #     arguments: -syntax-only
      #     target: packer/docker-python.pkr.hcl

      # # build artifact
      # - name: Build Artifact
      #   id: packer-build
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: build
      #     arguments: "-color=false -on-error=abort"
      #     target: packer/docker-python.pkr.hcl
      #   env:
      #     PACKER_LOG: 1
