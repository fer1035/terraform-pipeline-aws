name: CICD

on:
  push:
    branches:
      - main
  pull_request:

env:
  ENVIRO: test
  ACCOUNT_ID: '531133914787'
  USERNAME: testUser
  REGION: us-east-1
  FAMILY: ansibleexec
  DEFAULT_TAG: latest
  LAUNCH_TYPE: FARGATE
  SUBNET_1: subnet-072107252df3c7e87
  SUBNET_2: subnet-03b71dab2f9a1bb6f
  SEC_GRP: sg-05bd0031419bb91c5
  PUBLIC_IP: DISABLED
  INSTANCE_IP: '10.192.1.111'
  AMI: ami-0c02fb55956c7d316
  ANSIBLE_REMOTE_USER: ec2-user

jobs:

  tf_packer:
    name: Terraform-Packer
    uses: ./.github/workflows/tf_packer.yml
    with:
      enviro: test
      account_id: '531133914787'
      username: testUser
      launch_type: FARGATE
      family: ansibleexec
      default_tag: latest
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      TF_GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
  
  packer:
    name: Packer
    needs: tf_packer
    uses: ./.github/workflows/packer.yml
    with:
      enviro: test
      region: us-east-1
      ecr: 531133914787.dkr.ecr.us-east-1.amazonaws.com
      family: ansibleexec
      default_tag: latest
      instance_ip: '10.192.1.111'
      ansible_remote_user: ec2-user
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ANSIBLE_PRIVATE_KEY: ${{ secrets.ANSIBLE_PRIVATE_KEY }}
      ANSIBLE_PUBLIC_KEY: ${{ secrets.ANSIBLE_PUBLIC_KEY }}
      ANSIBLE_WEBHOOK_URL: ${{ secrets.ANSIBLE_WEBHOOK_URL }}
  
  terraform:
    name: Terraform
    needs: packer
    uses: ./.github/workflows/terraform.yml
    with:
      enviro: test
      subnet_1: subnet-072107252df3c7e87
      security_group: sg-05bd0031419bb91c5
      instance_ip: '10.192.1.111'
      ami: ami-0c02fb55956c7d316
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      TF_GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
      ANSIBLE_PUBLIC_KEY: ${{ secrets.ANSIBLE_PUBLIC_KEY }}
  
  ansible:
    name: AnsibleContainer
    needs: terraform
    runs-on: ubuntu-latest
    environment: test
    steps:

      - name: Run Ansible Task
        id: run-ansible
        run: |
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          aws ecs run-task \
          --region $REGION \
          --cluster $FAMILY \
          --launch-type $LAUNCH_TYPE \
          --task-definition arn:aws:ecs:$REGION:$ACCOUNT_ID:task-definition/$FAMILY \
          --network-configuration "awsvpcConfiguration={subnets=[$SUBNET_1, $SUBNET_2], securityGroups=[$SEC_GRP], assignPublicIp=$PUBLIC_IP}"
      
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `#### Ansible Container Execution ðŸ–Œ\`${{ steps.run-ansible.outcome }}\`

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Ansible Check Status
        if: steps.run-ansible.outcome == 'failure'
        run: exit 1
