name: Packer

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  packer:
    name: Packer
    runs-on: ubuntu-latest
    environment: test
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      # # fix backwards incompatibilities in template
      # - name: Fix Template
      #   id: packer-fix
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: fix
      #     target: packer

      # initialize Packer
      - name: Initialize Packer
        id: packer-init
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: packer
      
      # check templates formatting
      - name: Check Templates Formatting
        id: packer-fmt
        uses: hashicorp/packer-github-actions@master
        with:
          command: fmt
          target: packer
      
      # validate template
      - name: Validate Template
        id: packer-validate
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: packer/docker-python.pkr.hcl

      # # install Packer
      # - name: Install Packer
      #   run: |
      #     curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      #     sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      #     sudo apt-get update && sudo apt-get install packer -y
      
      # # run Packer checks
      # - name: Run Packer Checks
      #   id: packer-check
      #   run: |
      #     packer init packer
      #     packer fmt packer
      #     packer validate packer/docker-python.pkr.hcl

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `#### Packer Format and Style ðŸ–Œ\`${{ steps.packer-check.outcome }}\`

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Packer check status
        if: steps.packer-validate.outcome == 'failure'
        run: exit 1
      
      - name: Configure Credentials
        id: credentials-create
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          sed -i 's|AWS_ACCESS_KEY_ID|${{ secrets.AWS_ACCESS_KEY_ID }}|' packer/docker-python.pkr.hcl
          sed -i 's|AWS_SECRET_ACCESS_KEY|${{ secrets.AWS_SECRET_ACCESS_KEY }}|' packer/docker-python.pkr.hcl
      
      # build artifact
      - name: Build Artifact
        id: packer-build
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: packer/docker-python.pkr.hcl
        env:
          PACKER_LOG: 0
      
      # # run Packer build
      # - name: Run Packer Build
      #   id: packer-build
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: packer build packer/docker-python.pkr.hcl
      
      - name: Clear Credentials
        id: credentials-clear
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          sed -i 's|${{ secrets.AWS_ACCESS_KEY_ID }}|AWS_ACCESS_KEY_ID|' packer/docker-python.pkr.hcl
          sed -i 's|${{ secrets.AWS_SECRET_ACCESS_KEY }}|AWS_SECRET_ACCESS_KEY|' packer/docker-python.pkr.hcl
          rm -f ~/.docker/config.json
